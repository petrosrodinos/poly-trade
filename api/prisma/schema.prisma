// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique
  username     String   @unique
  password  String
  role      Role   @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  bots      Bot[]
  subscriptions BotSubscription[]
}

model Bot {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique
  user_id    Int
  symbol    String
  timeframe String
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  subscriptions BotSubscription[]
  user      User     @relation(fields: [user_id], references: [id])
}

model BotSubscription {
  id        Int      @id @default(autoincrement())
  uuid      String   @unique
  user_id    Int
  bot_id    Int
  amount    Int
  leverage  Int @default(1)
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  bot       Bot      @relation(fields: [bot_id], references: [id])
  user      User     @relation(fields: [user_id], references: [id])
}

enum Role {
  USER
  ADMIN
}



